<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dlj.app.dao.FriendRequestsDao">

	<insert id="add" parameterType="cn.dlj.app.entity.FriendRequests" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
		insert into t_friend_requests(userId,friendId,status,addTime)
		values(#{userId},#{friendId},#{status},#{addTime})
	</insert>
	
	<insert id="addUserFriend" parameterType="cn.dlj.app.entity.UserFriendRelation" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
		insert into t_user_friend_relation(userId,friendId)
		values(#{userId},#{friendId})
	</insert>
	
	<update id="update" >
		update t_friend_requests set
			status= #{status}
		where id=#{id}
	</update>
	
	<select id="getUserFriendRelation" resultType="cn.dlj.app.entity.UserFriendRelation">
		select
				id 					as "id",
				userId 				as "userId",
				friendId 			as "friendId"
		from t_user_friend_relation
		<where>
			userId=#{userId} and friendId=#{friendId}
		</where>
	</select>
	
	<select id="getByUserIdAndFriendId" resultType="cn.dlj.app.entity.FriendRequests">
		select
				id 					as "id",
				userId 				as "userId",
				friendId 			as "friendId",
				status 				as "status",
				addTime 			as "addTime"
		from t_friend_requests
		<where>
			userId=#{userId} and friendId=#{friendId}
		</where>
	</select>
	
	<select id="getByUserId" resultType="cn.dlj.app.entity.FriendRequests">
		select
				f.id 				as "id",
				f.userId 			as "userId",
				f.friendId 			as "friendId",
				u.name 				as "friendName",
				u.headImg 			as "friendHeadImg",
				f.status 			as "status"
		from t_friend_requests f
		left join t_user u on u.id=f.friendId
		<where>
			f.userId=#{userId}
		</where>
		order by addTime desc
	</select>
	
</mapper>
