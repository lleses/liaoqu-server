<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dlj.app.dao.UserDao">

	<insert id="add" parameterType="cn.dlj.app.entity.User" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
		insert into t_user(username,pwd,phone,name,lockPwd,headImg)
		values(#{username},#{pwd},#{phone},#{name},#{lockPwd},#{headImg})
	</insert>
	
	<insert id="add2" parameterType="cn.dlj.app.entity.User" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
		insert into ot_user(UE_account,UE_password,UE_secpwd,UE_phone,UE_accName,UE_level,rqb,lqb,UE_status,levelname)
		values(#{username},#{pwd},#{pwd},#{phone},'admin',0,0,2999,0,'普通会员')
	</insert>
	
	<update id="update" parameterType="cn.dlj.app.entity.User" >
		update t_user set
			username= #{username},
			pwd= #{pwd}, 
			name= #{name}, 
			sex= #{sex}, 
			phone = #{phone}, 
			organization= #{organization}, 
			signature= #{signature}, 
			lockPwd= #{lockPwd}, 
			email= #{email}, 
			headImg= #{headImg}
		where id=#{id}
	</update>
	
	<update id="updateLock" parameterType="cn.dlj.app.entity.User" >
		update t_user set
			lockPwd= #{lockPwd}
		where id=#{id}
	</update>
	
	<select id="getByUsername" resultType="cn.dlj.app.entity.User">
		select
				id 					as "id",
				username 			as "username",
				pwd 				as "pwd",
				name 				as "name",
				sex 				as "sex",
				phone				as "phone",
				organization		as "organization",
				signature			as "signature",
				lockPwd				as "lockPwd",
				email				as "email",
				headImg				as "headImg"
		from t_user
		<where>
			username=#{username}
		</where>
	</select>
	
	<select id="getById" resultType="cn.dlj.app.entity.User">
		select
				id 					as "id",
				username 			as "username",
				pwd 				as "pwd",
				name 				as "name",
				sex 				as "sex",
				phone				as "phone",
				organization		as "organization",
				signature			as "signature",
				lockPwd				as "lockPwd",
				email				as "email",
				headImg				as "headImg"
		from t_user
		<where>
			id=#{id}
		</where>
	</select>
	
	<select id="getByUsernameOrPhone" resultType="cn.dlj.app.entity.User">
		select
				id 					as "id",
				username 			as "username",
				pwd 				as "pwd",
				name 				as "name",
				sex 				as "sex",
				phone				as "phone",
				organization		as "organization",
				signature			as "signature",
				lockPwd				as "lockPwd",
				email				as "email",
				headImg				as "headImg"
		from t_user
		<where>
			id!=#{userId} and (username=#{content} or phone=#{content} )
		</where>
	</select>
	
	<select id="getFriends" resultType="cn.dlj.app.entity.User">
		select
				u.id 					as "id",
				u.username 				as "username",
				u.pwd 					as "pwd",
				u.name 					as "name",
				u.sex 					as "sex",
				u.phone					as "phone",
				u.organization			as "organization",
				u.signature				as "signature",
				u.lockPwd				as "lockPwd",
				u.email					as "email",
				u.headImg				as "headImg"
		from t_user_friend_relation f
		left join t_user u on f.friendId = u.id
		<where>
			f.userId=#{userId}
		</where>
	</select>
	
	<delete id="del">
		delete from t_user
	</delete>
	<delete id="del2">
		delete from t_user_friend_relation
	</delete>
	<delete id="del3">
		delete from t_message
	</delete>
	<delete id="del4">
		delete from t_message_list
	</delete>
	<delete id="del5">
		delete from t_group
	</delete>
	<delete id="del6">
		delete from t_group_message
	</delete>
	<delete id="del7">
		delete from t_group_user_relation
	</delete>
	<delete id="del8">
		delete from t_friend_requests
	</delete>
	
</mapper>
